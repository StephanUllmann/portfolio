---
import "../styles/global.css";
const { title } = Astro.props;
import { ViewTransitions } from "astro:transitions";
const displayTitle = title ? title + " | " : "";
import Header from "../components/header/Header.astro";
import Navigation from "../components/Navigation.astro";
---

<html lang="en" transition:name="root" transition:animate="none">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta name="generator" content={Astro.generator} />
    <link
      rel="icon"
      href="data:image/svg+xml,<svg xmlns=%22http://www.w3.org/2000/svg%22 viewBox=%220 0 100 100%22><text y=%22.9em%22 font-size=%2290%22>üê¶‚Äçüî•</text></svg>"
    />
    <!-- <script src="htmx.org"></script> -->
    <ViewTransitions />
    <title>{displayTitle} Stephan Ullmann</title>
  </head>
  <body hx-boost="true">
    <div class="scrollbar"></div>
    <div class="layout">
      <!-- <Header/> -->
      <main>
        <slot id="main-slot" />
      </main>
      <Navigation />
    </div>
    <!-- <div class="scroll-to-top"><a href="#">&ShortUpArrow;</a></div> -->

    <div class="noise">
      <svg height="100%" width="100%">
        <defs>
          <pattern
            height="500"
            width="500"
            patternUnits="userSpaceOnUse"
            id="noise-pattern"
          >
            <filter y="0" x="0" id="noise">
              <feTurbulence
                stitchTiles="stitch"
                numOctaves="3"
                baseFrequency="0.8"
                type="fractalNoise"></feTurbulence>
              <feBlend mode="screen"></feBlend>
            </filter>
            <rect filter="url(#noise)" height="500" width="500"></rect>
          </pattern>
        </defs>
        <rect fill="url(#noise-pattern)" height="100%" width="100%"></rect>
      </svg>
    </div>
  </body>
</html>

<style is:global>
  .noise {
    position: absolute;
    inset: 10px 0;
    /* top: -20px;
    bottom: -20px;
    left: 0;
    right: 0; */
    opacity: 0.08;
    /* z-index: -1; */
    pointer-events: none;
    mask-image: linear-gradient(
      transparent 2.5%,
      white 30%,
      white 70%,
      transparent 97.5%
    );
    filter: grayscale(1);
  }

  @keyframes bump {
    0% {
      opacity: 0;
      transform: scale(0.8) translateY(7.5rem) translateX(-5%) rotateX(20deg);
    }
    50% {
      opacity: 0.9;
      transform: scale(0.95) translateY(0px) translateX(-1.5%) rotateX(0deg);
    }
    100% {
      opacity: 1;
      transform: scale(1) translateX(0);
    }
  }
  @keyframes bump-in {
    0% {
      opacity: 0;
    }
    100% {
      opacity: 1;
    }
    /* 0% {
      translate: 0 100%;
      scale: 0.8;
      outline: 2px solid var(--base-light);
      border-radius: 1rem;
    }
    50% {
      translate: 0 40%;
      scale: 0.8;
      outline: 2px solid var(--base-light);
      border-radius: 1rem;
    }
    100% {
      opacity: 1;
      translate: 0 0%;
      scale: 1;
      outline: 2px solid var(--base-light);
      border-radius: 1rem;
    } */
  }
  @keyframes bump-out {
    0% {
      opacity: 1;
    }
    100% {
      opacity: 0;
    }
    /* 0% {
      opacity: 1;
      translate: 0 0%;
      scale: 1;
      outline: 2px solid var(--base-light);
      border-radius: 1rem;
    }
    50% {
      translate: 0 -40%;
      scale: 0.8;
      outline: 2px solid var(--base-light);
      border-radius: 1rem;
    }
    100% {
      translate: 0 -100%;
      scale: 0.8;
      outline: 2px solid var(--base-light);
      border-radius: 1rem;
    } */
  }
</style>
