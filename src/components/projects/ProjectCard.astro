---
interface Props {
  project: Project;
  href: string;
  index: number;
}
import { Icon } from "astro-icon/components";
import { Image } from "astro:assets";
const { project, href, index } = Astro.props;
const iconmap: { [key: string]: string } = {
  css: "css",
  ts: "ts",
  typescript: "ts",
  go: "go",
  csharp: "csharp",
};
---

<li>
  <a href={`/projects/${href}`} class="card">
    <Image
      src={project.image.src}
      alt={project.image.alt}
      width={230}
      height={135}
      class="fancy-border"
      style={{ animationDelay: 50 * index + "ms" }}
    />
    <div class="content">
      <h2>{project.title}</h2>
      <ul>
        {
          project.tags.map((tag) => (
            <li>
              {iconmap[tag.toLowerCase()] ? (
                <Icon name={iconmap[tag.toLowerCase()]} />
              ) : (
                <span class="badge">{tag}</span>
              )}
            </li>
          ))
        }
      </ul>
    </div>
  </a>
</li>

<style>
  .card {
    display: grid;
    justify-items: center;
  }
  .img-wrapper {
    border-radius: 1rem;
    overflow: clip;
  }
  .project-img {
    --deg: 25deg;
    border: 0.2rem solid transparent;
    border-image: linear-gradient(
        var(--deg, 45deg) in oklch,
        var(--primary),
        var(--accent)
      )
      1 / 0.5rem;
    border-radius: 1.2rem;
    overflow: clip;
    object-fit: cover;
    outline: 0.5rem solid var(--base);
    outline-offset: 0.12rem;
    animation: rotate 4000ms linear infinite alternate;
  }
  @keyframes rotate {
    from {
      --deg: 5deg;
    }
    to {
      --deg: 120deg;
    }
  }
  .content {
    padding: 0.5rem 1rem;
  }
  h2 {
    font-size: 1.25rem;
  }
  ul {
    display: flex;
    justify-content: center;
    gap: 0.5rem;

    & > * {
      font-size: 0.815rem;
    }
  }
</style>
