---
import { Icon } from "astro-icon/components";
---

<nav>
  <ul id="navlist" class="navlist">
    <li><a href="/">Stephan Ullmann</a></li>
    <li><a href="/dev">Web Developer</a></li>
    <!-- <li><a href="/projects">Projects</a></li> -->
    <!-- <li><a href="/blog">Blog</a></li> -->
    <li>
      <ul class="iconlist">
        <li>
          <a
            href="https://github.com/StephanUllmann"
            target="_blank"
            rel="noopener noreferrer"
            aria-label="GitHub"><Icon name="github" /></a
          >
        </li>
        <li>
          <a
            href="https://www.linkedin.com/in/stephan-ullmann/"
            target="_blank"
            rel="noopener noreferrer"
            aria-label="LinkedIn"><Icon name="linkedin" /></a
          >
        </li>
        <li>
          <a href="mailto:stephan.ullmann@posteo.de" aria-label="Email"
            ><Icon name="email" /></a
          >
        </li>
        <!-- <li>
          <a href="/cv">CV</a>
        </li> -->
      </ul>
    </li>
  </ul>
</nav>

<style>
  .navlist {
    position: sticky;
    top: 0;
    right:;
    display: grid;
    height: 100dvh;
    grid-template-rows: repeat(5, 1fr);
    grid-auto-rows: 19.99vh;
    align-items: center;
    list-style: none;
    z-index: 5;
  }
  .navlist > li {
    height: 100%;
    border-color: var(--base-light);
    border-color: light-dark(var(--base), var(--base-light));

    @media screen and (width < 500px) {
      font-size: 0.7rem;
      writing-mode: vertical-lr;
      width: fit-content;
    }
    &:not(:last-of-type) {
      border-bottom: 1px solid;
    }
  }
  a {
    padding: 1rem;
    align-content: center;
    display: block;
    height: 100%;
  }
  a:hover {
    background-color: hsla(from var(--base-light) h s l / 15%);
  }
  .iconlist a:hover {
    background-color: transparent;
    color: hsla(from var(--base-light) h s l / 66%);
    transition: color 100ms linear;
  }

  .iconlist {
    display: flex;
    height: 100%;
    align-items: center;
    li {
      height: fit-content;
    }
  }

  .active {
    background-color: hsla(from var(--base-light) h s l / 5%);
  }
</style>

<script>
  import { navigate } from "astro:transitions/client";
  function debounce<F extends (...args: any[]) => any>(
    func: F,
    timeout = 300,
  ): (...args: Parameters<F>) => void {
    let timer: ReturnType<typeof setTimeout> | undefined;

    return (...args: Parameters<F>) => {
      if (timer) {
        clearTimeout(timer);
      }

      timer = setTimeout(() => {
        func(...args);
      }, timeout);
    };
  }

  const links = [...document.getElementById("navlist")!.children].flatMap(
    (li) => (li.firstChild! as HTMLAnchorElement).href || [],
  );
  let index = links.findIndex((link) => link === window.location.href);
  // @ts-ignore
  if (navigation) {
    const pathn = window.location.pathname;
    const match =
      pathn.length > 1 && pathn.at(-1) === "/"
        ? pathn.slice(0, pathn.length - 1)
        : pathn;
    document.querySelector(`[href="${match}"]`)?.classList.add("active");

    // @ts-ignore
    navigation.addEventListener("navigate", (e) => {
      const url = new URL(e.destination.url);
      const match =
        url.pathname.length > 1 && url.pathname.at(-1) === "/"
          ? url.pathname.slice(0, url.pathname.length - 1)
          : url.pathname;
      const activeLink = document.querySelector(`[href="${match}"]`);
      activeLink?.classList.add("active");
    });
  }

  const handlePageChange = debounce((e: WheelEvent) => {
    // const handlePageChange = (e: WheelEvent) => {
    const isDown = e.deltaY > 0;
    if (isDown) {
      index = index === links.length - 1 ? 0 : index + 1;
    } else {
      index = index === 0 ? links.length - 1 : index - 1;
    }
    // (
    //   document.querySelector(
    //     `[href="${new URL(links[index]).pathname}"]`,
    //   )! as HTMLAnchorElement
    // ).click();
    navigate(links[index]);
    // };
  }, 100);

  const handleWheel = (e: WheelEvent) => {
    if ((e.target as Element).closest("nav")) handlePageChange(e);
    else if (window.location.pathname.startsWith("/blog/")) return;
    else {
      const main = (e.target as Element).closest("main");
      if (
        main &&
        main?.offsetHeight + main?.scrollTop === main?.scrollHeight &&
        e.deltaY > 0
      )
        handlePageChange(e);
      if (main?.scrollTop === 0 && e.deltaY < 0) handlePageChange(e);
    }
  };

  document.addEventListener("wheel", handleWheel);
</script>
