---
import type { GetStaticPaths, ImageMetadata } from "astro";
import { getCollection } from "astro:content";
import { Image } from "astro:assets";
import { Icon } from "astro-icon/components";
import BaseLayout from "../../layouts/BaseLayout.astro";
import Tags from "../../components/Tags.astro";
import WebCarousel from "../../components/ui/WebCarousel.astro";

const images = import.meta.glob<{ default: ImageMetadata }>(
  "/src/images/**/*.{jpeg,jpg,png,gif.webp}",
);

export const getStaticPaths = (async () => {
  const blogEntries = await getCollection("projects");
  return blogEntries.map((e) => ({
    params: { id: e.id },
    props: { project: e },
  }));
}) satisfies GetStaticPaths;

const { project } = Astro.props;

for (const image of project.data.images) {
  if (!images[image.src])
    throw new Error(
      `"${image.src}" does not exist in glob: "/src/images/**/*.{jpeg,jpg,png,gif.webp}"`,
    );
}
---

<BaseLayout title={project.data.title}>
  <div class="center">
    {
      project.data.images.length > 1 ? (
        <WebCarousel>
          {project.data.images.map((image, ind) => (
            <Image
              src={images[image.src]()}
              alt={image.alt}
              quality={"max"}
              loading={ind > 0 ? "lazy" : "eager"}
              transition:name={ind === 0 ? project.id + "-image" : undefined}
            />
          ))}
        </WebCarousel>
      ) : (
        <Image
          src={images[project.data.images[0].src]()}
          alt={project.data.images[0].alt}
          quality={"max"}
          loading={"eager"}
          class={"fancy-border"}
          transition:name={project.id + "-image"}
        />
      )
    }
    <h1>{project.data.title}</h1>
    <p>{project.data.description}</p>
    <div class="tags-wrapper iconlist">
      <a
        href={project.data.ghLink}
        aria-description="GitHub Link"
        target="_blank"
        rel="noopener noreferrer"><Icon name="github" /></a
      >
      <a
        href={project.data.deployedLink}
        aria-description="Website Link"
        target="_blank"
        rel="noopener noreferrer"><Icon name="website" /></a
      >
      <Tags tags={project.data.tags} />
    </div>
  </div>
</BaseLayout>

<style>
  .center {
    margin-block: 3rem;
    padding: 2vmin;
    img {
      display: block;
      width: 100%;
      height: 100%;
      object-fit: contain;
      scroll-snap-align: center;
      border-radius: 1.2rem;
    }
  }
  h1 {
    margin-block: 2rem;
  }
  .tags-wrapper {
    display: flex;
    flex-wrap: wrap;
    font-size: 2rem;
    gap: 1.5rem;
  }
</style>
