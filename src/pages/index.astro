---
import { Icon } from "astro-icon/components";
import BaseLayout from "../layouts/BaseLayout.astro";
import { customTransition } from "../utils/viewTransition";
---

<BaseLayout>
  <section transition:name="main" transition:animate={customTransition}>
    <h1>Hey there, I'm <span class="name">Stephan</span>.</h1>
    <div class="equal-width">
      <p>Web Developer and Instructor from Germany.</p>
      <ul class="iconlist">
        <li><Icon name="css" /></li>
        <li><Icon name="ts" /></li>
        <li><Icon name="go" /></li>
        <!-- <li><Icon name="csharp" /></li> -->
        <li><Icon name="react" /></li>
        <li><Icon name="pg" /></li>
        <li><Icon name="git" /></li>
      </ul>
    </div>
    <div class="spark" style="--delay: 0ms;--dur: 9341ms;--p:75% 5%;">
      <Icon name="css" />
    </div>
    <div class="spark" style="--delay: 123ms;--dur: 8412ms;--p:10% 60%;">
      <Icon name="go" />
    </div>
    <div class="spark" style="--delay: 846ms;--dur: 9344ms;--p: 5% 2%;">
      <Icon name="git" />
    </div>
    <div class="spark" style="--delay: 1024ms;--dur: 5341ms;--p: 85% 80%;">
      <Icon name="csharp" />
    </div>
  </section>
</BaseLayout>

<style>
  section {
    position: relative;
    overflow: hidden;
  }

  .name {
    position: relative;

    &::after {
      position: absolute;
      content: "ðŸ‘‹";
      right: 0;
      top: 0;
      opacity: 0;
      transition: all 200ms ease-in-out;
    }
    &:hover::after {
      position: absolute;
      content: "ðŸ‘‹";
      opacity: 1;
      right: -20px;
      top: -20px;
      transition: all 200ms ease-in-out;
    }
  }
  .equal-width {
    width: fit-content;
  }
  .iconlist {
    display: flex;
    justify-content: space-between;
  }
  li {
    display: grid;
    place-content: center;
    aspect-ratio: 1;
    padding: 1rem;
    position: relative;
    &::before {
      content: "";
      inset: 25%;
      filter: blur(3rem);
      display: block;
      position: absolute;
      z-index: -1;
      transition: all 200ms linear;
    }
    /* &:hover::before {
      background-color: var(--accent);
    } */
    &:has(> [data-icon="css"]:hover)::before {
      background-color: oklch(from rebeccapurple 40% c h);
    }
    &:has(> [data-icon="ts"]:hover)::before {
      background-color: oklch(from #3178c6 40% c h);
    }
    &:has(> [data-icon="go"]:hover)::before {
      background-color: oklch(from #00acd7 40% c h);
    }
    &:has(> [data-icon="react"]:hover)::before {
      background-color: oklch(from #58c4dc 40% c h);
    }
    &:has(> [data-icon="pg"]:hover)::before {
      background-color: oklch(from #336791 40% c h);
    }
    &:has(> [data-icon="git"]:hover)::before {
      background-color: oklch(from #f03c2e 40% c h);
    }
  }

  [data-icon] {
    font-size: 3rem;
    filter: saturate(0.25);
    transition: all 200ms linear;

    &:hover {
      filter: saturate(0.9);
    }
  }

  .spark {
    --p: 10% 25%;
    --r: 20deg;
    --dur: 2000ms;
    --delay: 1000ms;
    position: absolute;
    z-index: -1;
    inset: var(--p, 10% 25%);
    width: 5rem;
    aspect-ratio: 3 / 2;
    filter: blur(2rem) brightness(0.5) saturate(0.75);
    transform: scale(5, 2) rotate(var(--r));
    transform-style: preserve-3d;
    animation: blink var(--dur, 1000ms) var(--delay, 1000ms) ease infinite
      alternate;

    & [data-icon] {
      width: 100%;
      height: 100%;
      /* filter: saturate(0.75); */
    }
  }

  @keyframes blink {
    0% {
      filter: blur(1.7rem) brightness(0.4) saturate(0.95);
    }
    40% {
      filter: blur(2.4rem) brightness(0.45) saturate(1);
    }
    100% {
      filter: blur(1.5rem) brightness(0.42) saturate(0.95);
    }
  }
</style>
